import { readFileSync } from 'fs';
import Joi from 'joi';

import { convertFromDirectory, convertSchema, Settings } from '../../index';

// Its not recommended to use this default action as TypeScript formatting styleguides
// are camlCase for properties and TitleCase for interfaces
// but this feature is great to get things working and reduce the barrier of using this package

describe('test `useExportedVarName` setting', () => {
  test('create a type even if there is no `.label()`', async () => {
    const typeOutputDirectory = './src/__tests__/useExportedVarName/interfaces';
    const result = await convertFromDirectory({
      schemaDirectory: './src/__tests__/useExportedVarName/schemas',
      typeOutputDirectory
    });

    expect(result).toBe(true);

    const oneContent = readFileSync(`${typeOutputDirectory}/One.ts`).toString();

    expect(oneContent).toBe(
      `/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

export interface thingSchema {
  thing: string;
}
`
    );
  });

  test('no label() and no property name', () => {
    expect(() => {
      convertSchema(
        ({} as unknown) as Settings,
        Joi.object({
          name: Joi.string().optional()
        })
      );
    }).toThrowError();
  });
});
