import { convertFromDirectory } from '../index';
import { readFileSync } from 'fs';

test('02.fromFiles', async () => {
  const typeOutputDirectory = './src/__tests__/02/models';
  const result = await convertFromDirectory({
    schemaDirectory: './src/__tests__/02/schemas',
    typeOutputDirectory
  });

  expect(result).toBe(true);

  const indexContent = readFileSync(`${typeOutputDirectory}/index.ts`).toString();

  expect(indexContent).toBe(
    `/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

export * from './FooBar';
export * from './One';
export * from './Readme';
`
  );
  const oneContent = readFileSync(`${typeOutputDirectory}/One.ts`).toString();

  expect(oneContent).toBe(
    `/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

/**
 * a test schema definition
 */
export interface TestSchema {
  name?: string;
  propertyName1: boolean;
}
`
  );

  const fooBarContent = readFileSync(`${typeOutputDirectory}/FooBar.ts`).toString();

  expect(fooBarContent).toBe(`/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

export interface Bar {
  /**
   * Id
   */
  id: number;
}

export interface Foo {
  /**
   * Bar
   */
  bar: Bar;
  /**
   * Id
   */
  id: number;
}
`);

  const readmeContent = readFileSync(`${typeOutputDirectory}/Readme.ts`).toString();

  expect(readmeContent).toBe(`/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

export interface Job {
  businessName: string;
  jobTitle: string;
}

/**
 * A list of People
 */
export type People = Person[];

export interface Person {
  firstName: string;
  job?: Job;
  /**
   * Last Name
   */
  lastName: string;
}
`);
});
