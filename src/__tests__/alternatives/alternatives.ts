import { readFileSync } from 'fs';

import { convertFromDirectory } from '../../index';

describe('alternative types', () => {
  test('vaiations of alternatives from file', async () => {
    const typeOutputDirectory = './src/__tests__/alternatives/models';
    const result = await convertFromDirectory({
      schemaDirectory: './src/__tests__/alternatives/schemas',
      typeOutputDirectory,
      sortPropertiesByName: false
    });

    expect(result).toBe(true);

    const oneContent = readFileSync(`${typeOutputDirectory}/One.ts`).toString();
    expect(oneContent).toBe(
      `/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

/**
 * a description for basic
 */
export type Basic = number | string;

export interface Other {
  other?: string;
}

/**
 * a test schema definition
 */
export interface Test {
  name?: string;
  value?: Thing | Other;
  /**
   * a description for basic
   */
  basic?: Basic;
}

/**
 * A list of Test object
 */
export type TestList = (boolean | string)[];

export interface Thing {
  thing: string;
}
`
    );
  });
});
